name: Merge and Extract Country-Specific Proxy Configs

on:
  schedule:
    - cron: '0 * * * *' # Run every hour
  workflow_dispatch: # Allow manual trigger

jobs:
  merge-and-extract:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Get current date for cache key
        id: date
        run: echo "TODAY=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Cache GeoIP Database
        id: cache-geoip
        uses: actions/cache@v4
        with:
          path: GeoLite2-City.mmdb
          key: ${{ runner.os }}-geoip-${{ steps.date.outputs.TODAY }}
          restore-keys: |
            ${{ runner.os }}-geoip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests geoip2

      - name: Run merge_configs.py to gather proxies
        run: python merge_configs.py

      - name: Run exp_country.py (uses cached GeoIP DB)
        env:
          MAXMIND_LICENSE_KEY: ${{ secrets.MAXMIND_LICENSE_KEY }}
        run: python exp_country.py
      
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # اضافه کردن فایل‌هایی که توسط این workflow ساخته شده‌اند
          git add merged_configs.txt http_test.log subscription/*_sub.txt
          
          # فقط در صورتی که تغییری وجود داشته باشد، ادامه بده
          if git diff --staged --quiet; then
            echo "✅ No new proxy configurations generated. Skipping commit."
          else
            # ۱. تغییرات محلی را کامیت کن
            git commit -m "Update hourly proxy configurations"
            
            # ۲. آخرین تغییرات از سرور را بکش و تغییرات خود را روی آن بگذار
            echo "🔄 Pulling remote changes with rebase..."
            git pull --rebase
            
            # ۳. حالا تغییرات نهایی را پوش کن
            echo "🚀 Pushing changes to repository..."
            git push
          fi
