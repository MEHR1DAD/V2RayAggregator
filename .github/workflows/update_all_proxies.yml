name: Update All Proxy Subscriptions

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  update-all:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Get current date
        id: date
        run: echo "TODAY=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Cache GeoIP Database
        id: cache-geoip
        uses: actions/cache@v4
        with:
          path: GeoLite2-City.mmdb
          key: ${{ runner.os }}-geoip-${{ steps.date.outputs.TODAY }}
          restore-keys: |
            ${{ runner.os }}-geoip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests geoip2 jdatetime pytz

      - name: STEP 1 - Find new sources
        run: python find_sources.py
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

      - name: STEP 2 - Manage and prune source list
        run: python manage_sources.py

      - name: STEP 3 - Merge configs from active sources
        run: python merge_configs.py

      - name: STEP 4 - Extract configs by country
        run: |
          if [ ! -f GeoLite2-City.mmdb ]; then
            echo "GeoIP DB not found, downloading..."
            python -c "from exp_country import download_geoip_database; download_geoip_database()"
          fi
          python exp_country.py
        env:
          MAXMIND_LICENSE_KEY: ${{ secrets.MAXMIND_LICENSE_KEY }}

      - name: STEP 5 - Create rotating 100-config chunks
        run: python create_rotating_sub.py

      - name: STEP 6 - Generate README file
        run: python generate_readme.py

      - name: STEP 7 - Commit and push all changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          if git diff --staged --quiet; then
            echo "No changes detected. Skipping commit."
          else
            git commit -m "Update all proxy subscriptions and sources"
            git push
          fi
