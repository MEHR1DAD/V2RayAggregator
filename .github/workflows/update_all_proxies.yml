name: Update All Proxy Subscriptions

# ====================================================================
# کنترل همزمانی برای جلوگیری از اجرای همزمان چند نمونه
# ====================================================================
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
# ====================================================================

on:
  schedule:
    - cron: '*/5 * * * *' # هر ۵ دقیقه اجرا شود
  workflow_dispatch:

jobs:
  update-all:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # گرفتن تاریخ و ساعت فعلی برای کلیدهای کش
      - name: Get current date and hour
        id: date
        run: |
          echo "TODAY=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "HOUR=$(date -u +'%Y-%m-%d-%H')" >> $GITHUB_OUTPUT

      - name: Cache GeoIP Database
        id: cache-geoip
        uses: actions/cache@v4
        with:
          path: GeoLite2-City.mmdb
          key: ${{ runner.os }}-geoip-${{ steps.date.outputs.TODAY }}
          restore-keys: |
            ${{ runner.os }}-geoip-

      - name: Cache hourly run marker
        id: cache-hourly-marker
        uses: actions/cache@v4
        with:
          path: .hourly_run_marker
          key: ${{ runner.os }}-hourly-run-${{ steps.date.outputs.HOUR }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests geoip2

      - name: Run Hourly Tasks (if needed)
        if: steps.cache-hourly-marker.outputs.cache-hit != 'true'
        run: |
          echo "✅ Cache miss for hour ${{ steps.date.outputs.HOUR }}. Running hourly tasks..."
          
          # دانلود GeoIP DB فقط در صورتی که در کش روزانه وجود نداشته باشد
          if [ ! -f GeoLite2-City.mmdb ]; then
            echo "GeoIP DB not found, downloading..."
            python -c "from exp_country import download_geoip_database; download_geoip_database()"
          fi

          python merge_configs.py
          python exp_country.py
          touch .hourly_run_marker
        env:
          MAXMIND_LICENSE_KEY: ${{ secrets.MAXMIND_LICENSE_KEY }}

      - name: Run 5-Minute Task (always)
        run: python create_rotating_sub.py

      - name: Commit and push all changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          if git diff --staged --quiet; then
            echo "✅ No changes detected. Skipping commit."
          else
            git commit -m "Update all proxy subscriptions"
            git push
          fi
