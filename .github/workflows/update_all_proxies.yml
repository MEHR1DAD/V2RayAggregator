name: Update All Proxy Subscriptions

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

on:
  schedule:
    # هر ساعت اجرا شود
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  update-all:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Get current date for caching
        id: date
        run: echo "TODAY=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Cache GeoIP Database
        id: cache-geoip
        uses: actions/cache@v4
        with:
          path: GeoLite2-City.mmdb
          key: ${{ runner.os }}-geoip-${{ steps.date.outputs.TODAY }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests geoip2 jdatetime pytz pyyaml httpx

      - name: Download Xray-core for testing
        run: |
          wget -q -O xray.zip https://github.com/XTLS/Xray-core/releases/latest/download/Xray-linux-64.zip
          unzip -q xray.zip xray
          chmod +x xray

      - name: Run Main Pipeline
        run: |
          echo "--- Running Main Data Pipeline ---"
          # ۱. مقداردهی اولیه دیتابیس
          python -c "from database import initialize_db; initialize_db()"
          
          # ۲. مدیریت و پاک‌سازی منابع
          python manage_sources.py
          
          # ۳. تجمیع کانفیگ‌ها از منابع فعال
          python merge_configs.py
          
          # ۴. تست و ذخیره کانفیگ‌های سالم در دیتابیس
          python exp_country.py
          
          # ۵. ساخت فایل‌های اشتراک نهایی از دیتابیس
          python create_rotating_sub.py
          
          # ۶. ساخت فایل‌های README و summary.json
          python generate_readme.py
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          MAXMIND_LICENSE_KEY: ${{ secrets.MAXMIND_LICENSE_KEY }}

      - name: Commit and push all changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # فایل‌های بزرگ و موقت را به گیت اضافه نمی‌کنیم
          git rm --cached -r aggregator_data.db merged_configs.txt || true
          git add .
          if git diff --staged --quiet; then
            echo "No changes detected. Skipping commit."
          else
            git commit -m " hourly update"
            git push
          fi
      
      - name: Upload Artifacts to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          # فایل‌های خروجی نهایی را آپلود می‌کنیم
          files: |
            summary.json
            aggregator_data.db
            merged_configs.txt
          body: "آخرین خروجی‌های پروژه. این فایل‌ها به صورت خودکار به‌روز می‌شوند."
          make_latest: true
